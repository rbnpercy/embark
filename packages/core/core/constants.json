{
  "httpContractsDirectory": ".embark/contracts/",
  "console": {
    "commandHistorySize": "20"
  },
  "contexts": {
    "simulator": "simulator",
    "blockchain": "blockchain",
    "templateGeneration": "templateGeneration",
    "run": "run",
    "upload": "upload",
    "build": "build",
    "console": "console",
    "graph": "graph",
    "scaffold": "scaffold",
    "test": "test",
    "reset": "reset",
    "any": "any"
  },
  "process": {
    "processLaunchRequest": "process:launch-request",
    "processLaunchComplete": "process:launch-complete",
    "log": "log",
    "events": {
      "on": "on",
      "request": "request",
      "response": "response"
    }
  },
  "pipeline": {
    "init": "init",
    "build": "build",
    "initiated": "initiated",
    "built": "built",
    "webpackDone": "webpackDone"
  },
  "blockchain": {
    "ethereum": "ethereum",
    "vm": "vm",
    "call": "eth_call",
    "clients": {
      "geth": "geth",
      "parity": "parity",
      "ganache": "ganache-cli"
    },
    "defaultMnemonic": "example exile argue silk regular smile grass bomb merge arm assist farm",
    "blockchainReady": "blockchainReady",
    "blockchainExit": "blockchainExit",
    "defaults": {
      "rpcPort": 8545,
      "wsPort": 8546
    },
    "init": "init",
    "initiated": "initiated",
    "servicePortOnProxy": 10,
    "networkIds": {
      "livenet": 1,
      "testnet": 3,
      "ropsten": 3,
      "rinkeby": 4,
      "development": 1337,
      "development_parity": 17
    },
    "gasAllowanceError": "Returned error: gas required exceeds allowance or always failing transaction",
    "gasAllowanceErrorMessage": "Failing call, this could be because of invalid inputs or function guards that may have been triggered, or an unknown error.",
    "transactionMethods": {
      "eth_sendTransaction": "eth_sendTransaction",
      "eth_sendRawTransaction": "eth_sendRawTransaction",
      "eth_getTransactionReceipt": "eth_getTransactionReceipt",
      "eth_call": "eth_call",
      "eth_accounts": "eth_accounts",
      "eth_signTypedData": "eth_signTypedData",
      "personal_listAccounts": "personal_listAccounts",
      "personal_newAccount": "personal_newAccount"
    }
  },
  "storage": {
    "init": "init",
    "initiated": "initiated",
    "restart": "restart",
    "exit": "storageExit"
  },
  "codeGenerator": {
    "gasLimit": 6000000
  },
  "logs": {
    "logPath": ".embark/logs/",
    "maxLogLength": 1500
  },
  "deploymentStrategy": {
    "implicit": "implicit",
    "explicit": "explicit"
  },
  "embarkResourceOrigin": "http://embark",
  "ens": {
    "whitelist": [
      "eth",
      "xyz"
    ]
  },
  "dappArtifacts": {
    "dir": "config",
    "blockchain": "blockchain.json",
    "storage": "storage.json",
    "communication": "communication.json",
    "embarkjs": "embarkjs.js",
    "embarkjsnode": "embarkjs.node.js",
    "contractsJs": "contracts",
    "symlinkDir": "modules"
  },
  "environments": {
    "development": "development"
  },
  "defaultMigrationsDir": "migrations"
}
